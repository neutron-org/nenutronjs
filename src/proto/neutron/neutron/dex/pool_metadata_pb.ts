// @generated by protoc-gen-es v1.4.2 with parameter "target=ts"
// @generated from file neutron/dex/pool_metadata.proto (package neutron.dex, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { PairID } from "./pair_id_pb.js";

/**
 * @generated from message neutron.dex.PoolMetadata
 */
export class PoolMetadata extends Message<PoolMetadata> {
  /**
   * @generated from field: uint64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: int64 tick = 2;
   */
  tick = protoInt64.zero;

  /**
   * @generated from field: uint64 fee = 3;
   */
  fee = protoInt64.zero;

  /**
   * @generated from field: neutron.dex.PairID pair_id = 4;
   */
  pairId?: PairID;

  constructor(data?: PartialMessage<PoolMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "neutron.dex.PoolMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "tick", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "fee", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "pair_id", kind: "message", T: PairID },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PoolMetadata {
    return new PoolMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PoolMetadata {
    return new PoolMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PoolMetadata {
    return new PoolMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: PoolMetadata | PlainMessage<PoolMetadata> | undefined, b: PoolMetadata | PlainMessage<PoolMetadata> | undefined): boolean {
    return proto3.util.equals(PoolMetadata, a, b);
  }
}

