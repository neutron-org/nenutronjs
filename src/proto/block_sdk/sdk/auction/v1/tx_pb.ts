// @generated by protoc-gen-es v1.4.2 with parameter "target=ts"
// @generated from file sdk/auction/v1/tx.proto (package sdk.auction.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Coin } from "../../../cosmos/base/v1beta1/coin_pb.js";
import { Params } from "./genesis_pb.js";

/**
 * MsgAuctionBid defines a request type for sending bids to the x/auction
 * module.
 *
 * @generated from message sdk.auction.v1.MsgAuctionBid
 */
export class MsgAuctionBid extends Message<MsgAuctionBid> {
  /**
   * bidder is the address of the account that is submitting a bid to the
   * auction.
   *
   * @generated from field: string bidder = 1;
   */
  bidder = "";

  /**
   * bid is the amount of coins that the bidder is bidding to participate in the
   * auction.
   *
   * @generated from field: cosmos.base.v1beta1.Coin bid = 2;
   */
  bid?: Coin;

  /**
   * transactions are the bytes of the transactions that the bidder wants to
   * bundle together.
   *
   * @generated from field: repeated bytes transactions = 3;
   */
  transactions: Uint8Array[] = [];

  constructor(data?: PartialMessage<MsgAuctionBid>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sdk.auction.v1.MsgAuctionBid";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bidder", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "bid", kind: "message", T: Coin },
    { no: 3, name: "transactions", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAuctionBid {
    return new MsgAuctionBid().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAuctionBid {
    return new MsgAuctionBid().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAuctionBid {
    return new MsgAuctionBid().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAuctionBid | PlainMessage<MsgAuctionBid> | undefined, b: MsgAuctionBid | PlainMessage<MsgAuctionBid> | undefined): boolean {
    return proto3.util.equals(MsgAuctionBid, a, b);
  }
}

/**
 * MsgAuctionBidResponse defines the Msg/AuctionBid response type.
 *
 * @generated from message sdk.auction.v1.MsgAuctionBidResponse
 */
export class MsgAuctionBidResponse extends Message<MsgAuctionBidResponse> {
  constructor(data?: PartialMessage<MsgAuctionBidResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sdk.auction.v1.MsgAuctionBidResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAuctionBidResponse {
    return new MsgAuctionBidResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAuctionBidResponse {
    return new MsgAuctionBidResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAuctionBidResponse {
    return new MsgAuctionBidResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAuctionBidResponse | PlainMessage<MsgAuctionBidResponse> | undefined, b: MsgAuctionBidResponse | PlainMessage<MsgAuctionBidResponse> | undefined): boolean {
    return proto3.util.equals(MsgAuctionBidResponse, a, b);
  }
}

/**
 * MsgUpdateParams defines a request type for updating the x/auction module
 * parameters.
 *
 * @generated from message sdk.auction.v1.MsgUpdateParams
 */
export class MsgUpdateParams extends Message<MsgUpdateParams> {
  /**
   * authority is the address of the account that is authorized to update the
   * x/auction module parameters.
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * params is the new parameters for the x/auction module.
   *
   * @generated from field: sdk.auction.v1.Params params = 2;
   */
  params?: Params;

  constructor(data?: PartialMessage<MsgUpdateParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sdk.auction.v1.MsgUpdateParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined, b: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParams, a, b);
  }
}

/**
 * MsgUpdateParamsResponse defines the Msg/UpdateParams response type.
 *
 * @generated from message sdk.auction.v1.MsgUpdateParamsResponse
 */
export class MsgUpdateParamsResponse extends Message<MsgUpdateParamsResponse> {
  constructor(data?: PartialMessage<MsgUpdateParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sdk.auction.v1.MsgUpdateParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined, b: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParamsResponse, a, b);
  }
}

