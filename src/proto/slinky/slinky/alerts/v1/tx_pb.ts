// @generated by protoc-gen-es v1.4.2 with parameter "target=ts"
// @generated from file slinky/alerts/v1/tx.proto (package slinky.alerts.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";
import { Alert } from "./alerts_pb.js";
import { Params } from "./genesis_pb.js";

/**
 * MsgAlert defines a message to create an alert.
 *
 * @generated from message slinky.alerts.v1.MsgAlert
 */
export class MsgAlert extends Message<MsgAlert> {
  /**
   * alert is the alert to be filed
   *
   * @generated from field: slinky.alerts.v1.Alert alert = 1;
   */
  alert?: Alert;

  constructor(data?: PartialMessage<MsgAlert>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "slinky.alerts.v1.MsgAlert";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "alert", kind: "message", T: Alert },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAlert {
    return new MsgAlert().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAlert {
    return new MsgAlert().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAlert {
    return new MsgAlert().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAlert | PlainMessage<MsgAlert> | undefined, b: MsgAlert | PlainMessage<MsgAlert> | undefined): boolean {
    return proto3.util.equals(MsgAlert, a, b);
  }
}

/**
 * @generated from message slinky.alerts.v1.MsgAlertResponse
 */
export class MsgAlertResponse extends Message<MsgAlertResponse> {
  constructor(data?: PartialMessage<MsgAlertResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "slinky.alerts.v1.MsgAlertResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAlertResponse {
    return new MsgAlertResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAlertResponse {
    return new MsgAlertResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAlertResponse {
    return new MsgAlertResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAlertResponse | PlainMessage<MsgAlertResponse> | undefined, b: MsgAlertResponse | PlainMessage<MsgAlertResponse> | undefined): boolean {
    return proto3.util.equals(MsgAlertResponse, a, b);
  }
}

/**
 * MsgConclusion defines a message carrying a Conclusion made by the SecondTier,
 * which will be used to close an alert. And trigger any ramifications of the
 * conclusion.
 *
 * @generated from message slinky.alerts.v1.MsgConclusion
 */
export class MsgConclusion extends Message<MsgConclusion> {
  /**
   * signer is the signer of this transaction (notice, this may not always be a
   * node from the SecondTier)
   *
   * @generated from field: string signer = 1;
   */
  signer = "";

  /**
   * conclusion is the conclusion to be filed
   *
   * @generated from field: google.protobuf.Any conclusion = 2;
   */
  conclusion?: Any;

  constructor(data?: PartialMessage<MsgConclusion>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "slinky.alerts.v1.MsgConclusion";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "conclusion", kind: "message", T: Any },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgConclusion {
    return new MsgConclusion().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgConclusion {
    return new MsgConclusion().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgConclusion {
    return new MsgConclusion().fromJsonString(jsonString, options);
  }

  static equals(a: MsgConclusion | PlainMessage<MsgConclusion> | undefined, b: MsgConclusion | PlainMessage<MsgConclusion> | undefined): boolean {
    return proto3.util.equals(MsgConclusion, a, b);
  }
}

/**
 * @generated from message slinky.alerts.v1.MsgConclusionResponse
 */
export class MsgConclusionResponse extends Message<MsgConclusionResponse> {
  constructor(data?: PartialMessage<MsgConclusionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "slinky.alerts.v1.MsgConclusionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgConclusionResponse {
    return new MsgConclusionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgConclusionResponse {
    return new MsgConclusionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgConclusionResponse {
    return new MsgConclusionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgConclusionResponse | PlainMessage<MsgConclusionResponse> | undefined, b: MsgConclusionResponse | PlainMessage<MsgConclusionResponse> | undefined): boolean {
    return proto3.util.equals(MsgConclusionResponse, a, b);
  }
}

/**
 * MsgUpdateParams defines the message type expected by the UpdateParams rpc. It
 * contains an authority address, and the new Params for the x/alerts module.
 *
 * @generated from message slinky.alerts.v1.MsgUpdateParams
 */
export class MsgUpdateParams extends Message<MsgUpdateParams> {
  /**
   * authority is the address of the authority that is submitting the update
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * params is the new set of parameters for the x/alerts module
   *
   * @generated from field: slinky.alerts.v1.Params params = 2;
   */
  params?: Params;

  constructor(data?: PartialMessage<MsgUpdateParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "slinky.alerts.v1.MsgUpdateParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined, b: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParams, a, b);
  }
}

/**
 * @generated from message slinky.alerts.v1.MsgUpdateParamsResponse
 */
export class MsgUpdateParamsResponse extends Message<MsgUpdateParamsResponse> {
  constructor(data?: PartialMessage<MsgUpdateParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "slinky.alerts.v1.MsgUpdateParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined, b: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParamsResponse, a, b);
  }
}

