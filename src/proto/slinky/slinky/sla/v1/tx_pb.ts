// @generated by protoc-gen-es v1.4.2 with parameter "target=ts"
// @generated from file slinky/sla/v1/tx.proto (package slinky.sla.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Params, PriceFeedSLA } from "./genesis_pb.js";

/**
 * MsgAddSLAs defines the Msg/AddSLAs request type. It contains the
 * SLAs to be added to the store.
 *
 * @generated from message slinky.sla.v1.MsgAddSLAs
 */
export class MsgAddSLAs extends Message<MsgAddSLAs> {
  /**
   * SLAs defines the SLAs to be added to the store.
   *
   * @generated from field: repeated slinky.sla.v1.PriceFeedSLA slas = 1;
   */
  slas: PriceFeedSLA[] = [];

  /**
   * Authority defines the authority that is adding the SLAs.
   *
   * @generated from field: string authority = 2;
   */
  authority = "";

  constructor(data?: PartialMessage<MsgAddSLAs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "slinky.sla.v1.MsgAddSLAs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "slas", kind: "message", T: PriceFeedSLA, repeated: true },
    { no: 2, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddSLAs {
    return new MsgAddSLAs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddSLAs {
    return new MsgAddSLAs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddSLAs {
    return new MsgAddSLAs().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAddSLAs | PlainMessage<MsgAddSLAs> | undefined, b: MsgAddSLAs | PlainMessage<MsgAddSLAs> | undefined): boolean {
    return proto3.util.equals(MsgAddSLAs, a, b);
  }
}

/**
 * MsgAddSLAsResponse defines the Msg/AddSLAs response type.
 *
 * @generated from message slinky.sla.v1.MsgAddSLAsResponse
 */
export class MsgAddSLAsResponse extends Message<MsgAddSLAsResponse> {
  constructor(data?: PartialMessage<MsgAddSLAsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "slinky.sla.v1.MsgAddSLAsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddSLAsResponse {
    return new MsgAddSLAsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddSLAsResponse {
    return new MsgAddSLAsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddSLAsResponse {
    return new MsgAddSLAsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAddSLAsResponse | PlainMessage<MsgAddSLAsResponse> | undefined, b: MsgAddSLAsResponse | PlainMessage<MsgAddSLAsResponse> | undefined): boolean {
    return proto3.util.equals(MsgAddSLAsResponse, a, b);
  }
}

/**
 * MsgRemoveSLAs defines the Msg/RemoveSLAs request type. It contains the
 * IDs of the SLAs to be removed from the store.
 *
 * @generated from message slinky.sla.v1.MsgRemoveSLAs
 */
export class MsgRemoveSLAs extends Message<MsgRemoveSLAs> {
  /**
   * IDs defines the IDs of the SLAs to be removed from the store.
   *
   * @generated from field: repeated string ids = 1;
   */
  ids: string[] = [];

  /**
   * Authority defines the authority that is removing the SLAs.
   *
   * @generated from field: string authority = 2;
   */
  authority = "";

  constructor(data?: PartialMessage<MsgRemoveSLAs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "slinky.sla.v1.MsgRemoveSLAs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRemoveSLAs {
    return new MsgRemoveSLAs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRemoveSLAs {
    return new MsgRemoveSLAs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRemoveSLAs {
    return new MsgRemoveSLAs().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRemoveSLAs | PlainMessage<MsgRemoveSLAs> | undefined, b: MsgRemoveSLAs | PlainMessage<MsgRemoveSLAs> | undefined): boolean {
    return proto3.util.equals(MsgRemoveSLAs, a, b);
  }
}

/**
 * MsgRemoveSLAsResponse defines the Msg/RemoveSLAs response type.
 *
 * @generated from message slinky.sla.v1.MsgRemoveSLAsResponse
 */
export class MsgRemoveSLAsResponse extends Message<MsgRemoveSLAsResponse> {
  constructor(data?: PartialMessage<MsgRemoveSLAsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "slinky.sla.v1.MsgRemoveSLAsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRemoveSLAsResponse {
    return new MsgRemoveSLAsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRemoveSLAsResponse {
    return new MsgRemoveSLAsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRemoveSLAsResponse {
    return new MsgRemoveSLAsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgRemoveSLAsResponse | PlainMessage<MsgRemoveSLAsResponse> | undefined, b: MsgRemoveSLAsResponse | PlainMessage<MsgRemoveSLAsResponse> | undefined): boolean {
    return proto3.util.equals(MsgRemoveSLAsResponse, a, b);
  }
}

/**
 * MsgParams defines the Msg/Params request type. It contains the
 * new parameters for the SLA module.
 *
 * @generated from message slinky.sla.v1.MsgParams
 */
export class MsgParams extends Message<MsgParams> {
  /**
   * Params defines the new parameters for the SLA module.
   *
   * @generated from field: slinky.sla.v1.Params params = 1;
   */
  params?: Params;

  /**
   * Authority defines the authority that is updating the SLA module parameters.
   *
   * @generated from field: string authority = 2;
   */
  authority = "";

  constructor(data?: PartialMessage<MsgParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "slinky.sla.v1.MsgParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "params", kind: "message", T: Params },
    { no: 2, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgParams {
    return new MsgParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgParams {
    return new MsgParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgParams {
    return new MsgParams().fromJsonString(jsonString, options);
  }

  static equals(a: MsgParams | PlainMessage<MsgParams> | undefined, b: MsgParams | PlainMessage<MsgParams> | undefined): boolean {
    return proto3.util.equals(MsgParams, a, b);
  }
}

/**
 * MsgParamsResponse defines the Msg/Params response type.
 *
 * @generated from message slinky.sla.v1.MsgParamsResponse
 */
export class MsgParamsResponse extends Message<MsgParamsResponse> {
  constructor(data?: PartialMessage<MsgParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "slinky.sla.v1.MsgParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgParamsResponse {
    return new MsgParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgParamsResponse {
    return new MsgParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgParamsResponse {
    return new MsgParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgParamsResponse | PlainMessage<MsgParamsResponse> | undefined, b: MsgParamsResponse | PlainMessage<MsgParamsResponse> | undefined): boolean {
    return proto3.util.equals(MsgParamsResponse, a, b);
  }
}

